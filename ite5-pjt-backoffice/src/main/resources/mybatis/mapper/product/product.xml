<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ite5pjtbackoffice.backoffice.dao.productdao.ProductDao">
	<!-- 상품등록 -->
	<select id="getProductCommonByPname" parameterType="String" resultType="productCommon">
		SELECT * FROM product_common
    		WHERE pname=#{pname}
	</select>
	
	<insert id="addProductColor" parameterType="productColor">
		INSERT INTO product_color(pcid, pcimg1, pcimg2, pcimg3, pcchipimg, pccolorcode, pcprice, pid)
			VALUES(#{pcid}, #{pcimg1}, #{pcimg2}, #{pcimg3}, #{pcchipimg}, #{pccolorcode}, #{pcprice}, #{pid})
	</insert>
	
	<insert id="addProductStock" parameterType="productStock">
		INSERT INTO product_stock(psid, pssize, pcid)
			VALUES(#{psid}, #{pssize}, #{pcid})
	</insert>
	
	<insert id="addProduct" parameterType="productCommon">
		INSERT INTO product_color(pid, pname, pnote, bno, pstatus, preleasedate)
		VALUES(#{pid}, #{pname}, #{pnote}, #{bno}, #{pstatus}, SYSDATE)
	</insert>
	
	<!-- 상품목록 -->
	<select id="getTotalProductCount" resultType="int" parameterType="pfilter">
		SELECT count(pid)
		FROM product_common
		WHERE pid IN (SELECT pid FROM product_category
						WHERE cateno IN
						<foreach collection="cateno" item="item" index="index" open="(" close=")" separator=",">
							#{item}
						</foreach>	
						)			
		<if test="pname != null">
			AND pname LIKE '%'||#{pname}||'%'
		</if>
		<if test="pid != null">
			AND pid=#{pid}
		</if>
		<if test="startdate != null">
			<if test="enddate != null">		
				AND to_char(preleasedate, 'YYYY-MM-DD') BETWEEN #{startdate} AND #{enddate}					
			</if>
		</if>
		<if test="pstatus != null">
			AND pstatus=#{pstatus}
		</if>
	</select>
	
	<select id="getCategoryNum" resultType="int" parameterType="pfilter">
		SELECT cateno FROM category
			<if test="depth1name != null">
				WHERE depth1name=#{depth1name}
			</if>			
			<if test="depth2name != null">
				AND depth2name=#{depth2name}				
			</if>
			<if test="depth3name != null">
				AND depth3name=#{depth3name}				
			</if>
	</select>
	
	<select id="getProductCommonList" resultType="productCommon" parameterType="HashMap">
		SELECT pid, pname, bno, pstatus, preleasedate
		FROM product_common
		WHERE pid IN (SELECT pid FROM product_category
						WHERE cateno IN
						<foreach collection="filter.cateno" item="item" index="index" open="(" close=")" separator=",">
							#{item}
						</foreach>	
						)			
		<if test="filter.pname != null">
			AND pname LIKE '%'||#{filter.pname}||'%'
		</if>
		<if test="filter.pid != null">
			AND pid=#{filter.pid}
		</if>
		<if test="filter.startdate != null">
			<if test="filter.enddate != null">
				AND preleasedate BETWEEN #{filter.startdate} AND #{filter.enddate}					
			</if>
		</if>
		<if test="filter.pstatus != null">
			AND pstatus=#{filter.pstatus}
		</if>
		<if test="pager.pageNo != 1">
			OFFSET #{pager.startRowNo}-1 ROWS 
		</if>
		FETCH NEXT #{pager.rowsPerPage} ROWS ONLY
	</select>
	
	<select id="getProductCommonByPid" parameterType="String" resultType="productCommon">
		SELECT * FROM product_common
    		WHERE pid=#{pid}
	</select>
	
	<select id="getProductColorList" parameterType="String" resultType="productColor">
		SELECT * FROM product_color
    		WHERE pid = #{pid}
	</select>
	
	<update id="modifyProductCommon" parameterType="productCommon">
		UPDATE product_common
			SET pname=#{pname}, pnote=#{pnote}, bno=#{bno}, pstatus=#{pstatus}
			WHERE pid=#{pid}
	</update>
	
	<update id="modifyProductColor" parameterType="productColor">
		UPDATE product_color
			SET pcimg1=#{pcimg1}, pcimg2=#{pcimg2}, pcimg3=#{pcimg3}, pcchipimg=#{pcchipimg},
				pccolorcode=#{pccolorcode}, pcprice=#{pcprice}
			WHERE pcid=#{pcid}
	</update>
	
	<!-- 상품분류관리 -->
	<select id="getCategoryDepth1" resultType="String">
		SELECT depth1name FROM depth1
	</select>
	<select id="getCategoryDepth2" resultType="String">
		SELECT DISTINCT depth2name FROM category
			WHERE depth1name=#{depth1}
	</select>
	<select id="getCategoryDepth3" resultType="String">
		SELECT depth3name FROM category
			WHERE depth1name=#{depth1}
			AND depth2name=#{depth2}
	</select>
	
	<select id="getBrand" resultType="brand">
		SELECT bno, bname FROM brand
	</select>
	
	<insert id="addBrandName" parameterType="String">
		INSERT INTO brand(bno, bname)
		VALUES(SEQ_BNO.nextval, #{brandName})
	</insert>
	
	<delete id="removeBrandName" parameterType="int">
		DELETE FROM brand
			WHERE bno=#{bno}
	</delete>
	
	<insert id="addCategory" parameterType="String">
		INSERT INTO category(cateno, depth1name, depth2name, depth3name)
		VALUES(SEQ_CATENO.nextval, #{depth1}, #{depth2}, #{depth3})
	</insert>
	
	<delete id="removeCategory" parameterType="String">
		DELETE FROM category
			WHERE depth1name=#{depth1}
			AND depth2name=#{depth2}
			AND depth3name=#{depth3}
	</delete>
	
	<!-- 상품통계 -->
	<select id="getCatenoBypid" parameterType="String" resultType="Integer">
		SELECT cateno FROM product_category
		    WHERE pid IN <foreach collection="pids" item="type"  open="(" close=")" separator=",">
            				#{type}
        				 </foreach>
	</select>
	
	<select id="getDepth1Name" parameterType="int" resultType="String">
		SELECT depth1name FROM category
    		WHERE cateno = #{cateno}
	</select>
	
	<select id="getProductCommonListByPname" parameterType="pfilter" resultType="productWithBrCat">
		SELECT pcom.pid, pcom.pname, pcom.pnote, pcom.bno, pcom.pstatus, pcom.preleasedate, br.bname, pcat.cateno, cat.depth1name, cat.depth2name, cat.depth3name
			FROM product_common pcom
			JOIN brand br
			ON (br.bno=pcom.bno)
			JOIN product_category pcat
			ON (pcom.pid=pcat.pid)
			JOIN category cat
			ON (cat.cateno=pcat.cateno)
			WHERE pcom.pname LIKE '%'||#{pname}||'%'
	</select>
	
</mapper>